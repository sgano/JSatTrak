/*
 * AddInputVar.java
 *=====================================================================
 *   This file is part of JSatTrak.
 *
 *   Copyright 2007-2013 Shawn E. Gano
 *   
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *   
 *       http://www.apache.org/licenses/LICENSE-2.0
 *   
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 * =====================================================================
 * 
 * Created on January 22, 2008, 11:53 AM
 */

package jsattrak.customsat.gui;

import java.util.Vector;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import jsattrak.customsat.InputVariable;
import name.gano.swingx.treetable.CustomTreeTableNode;

/**
 *
 * @author  sgano
 */
public class AddInputVar extends javax.swing.JPanel
{
    
    CustomTreeTableNode solverNode;
    SolverPanel solvePan;
    
    DefaultTreeModel treeModel;
    
    /** Creates new form AddInputVar */
    public AddInputVar(CustomTreeTableNode solverNode, SolverPanel solvePan)
    {
        this.solverNode = solverNode;
        this.solvePan = solvePan;
        
        initComponents();
        
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode("Variables");
        treeModel = new DefaultTreeModel(rootNode); // create tree model using root node
        
        varTree.setModel(treeModel);
        
        //varTree.setRootVisible(false); // hide root (one less thing to worry about them clicking on)
        
        // setup the tree:
        varTree.removeAll();
        // for each Chile
        
        // NEED TO MAKE THIS RECURSIVE SO LOWER CHIL BRANCHES ARE INCLUDED?
        for(int i=0;i<solverNode.getChildCount();i++)
        {
            CustomTreeTableNode node = (CustomTreeTableNode)solverNode.getChildAt(i);
            Vector<InputVariable> varVec = node.getInputVarVector();
            
            // add Node
            DefaultMutableTreeNode treeNodeParent = new DefaultMutableTreeNode(node.getValueAt(0));
            
            rootNode.add(treeNodeParent);
            
            for(InputVariable inVar : varVec)
            {
                treeNodeParent.add(  new DefaultMutableTreeNode( inVar ) );
                
                //System.out.println("added:" + inVar.toString());
            }
            
        } // for each Chile
        
        varTree.expandRow(0); // expand root
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        addVarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        varTree = new javax.swing.JTree();

        addVarButton.setText("Add");
        addVarButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addVarButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(varTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(addVarButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addVarButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addVarButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addVarButtonActionPerformed
    {//GEN-HEADEREND:event_addVarButtonActionPerformed
        // see if selected node's Object is a variable
        TreePath[] treePaths = varTree.getSelectionPaths();

        for (int i = 0; i < treePaths.length; i++)
        {
            
            DefaultMutableTreeNode node = (DefaultMutableTreeNode)treePaths[i].getLastPathComponent();
            Object currentObj = node.getUserObject();
            
            if(currentObj instanceof InputVariable)
            { 
                InputVariable iv = (InputVariable) currentObj;
                
                // add to SolverPanel
                solvePan.addInputVariable(iv);
                    
            }
        }
    }//GEN-LAST:event_addVarButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addVarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree varTree;
    // End of variables declaration//GEN-END:variables
    
}
