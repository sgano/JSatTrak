/*
 * TwoDViewPropertiesPanel.java
 * =====================================================================
 *   This file is part of JSatTrak.
 *
 *   Copyright 2007-2013 Shawn E. Gano
 *   
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *   
 *       http://www.apache.org/licenses/LICENSE-2.0
 *   
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 * =====================================================================
 *
 * Created on August 10, 2007, 2:10 PM
 */

package jsattrak.gui;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import jsattrak.utilities.CustomFileFilter;
import jsattrak.utilities.RelativePath;

/**
 *
 * @author  sgano
 */
public class TwoDViewPropertiesPanel extends javax.swing.JPanel implements java.io.Serializable
{
    
    J2DEarthPanel j2dpanel; // jpanel that this object is setting options for
    
    JSatTrak app; // used to force repaints
    
    JInternalFrame iframe; // used to know what its parent frame is - to close window
    
    
    /** Creates new form TwoDViewPropertiesPanel */
    public TwoDViewPropertiesPanel()
    {
        initComponents();
    }
    
    public void setInternalFrame(JInternalFrame iframe)
    {
        this.iframe = iframe;
    }
    
     public TwoDViewPropertiesPanel(J2DEarthPanel j2dpanel, JSatTrak app)
    {
        initComponents();
        
        this.j2dpanel = j2dpanel;
        this.app = app;
        
        // setup options window with currently selected options
        bgColorPanel.setBackground( j2dpanel.getBackgroundColor() );
        latLongLinesCheckBox.setSelected( j2dpanel.getShowLatLonLines()  );
        
//        if(j2dpanel.getImageMapNum() == 0)
//        {
//            blueMarbleImageRadioButton.setSelected(true);
//        }
//        else
//        {
//            noaaImageRadioButton.setSelected(true);
//        }
        // Image path
        imagePathTextField.setText(j2dpanel.getTwoDMap());
        
        zoomIncrementTextField.setText( j2dpanel.getZoomIncrementMultiplier() + "" );
        
        if(j2dpanel.getImageScalingOption() == BufferedImage.SCALE_FAST)
        {
            fastImageScalingRadioButton.setSelected(true);
        }
        else
        {
            smoothScalingRadioButton.setSelected(true);
        }
        
        showDatTimeCheckBox.setSelected( j2dpanel.isShowDateTime());
        dateTimeColorPanel.setBackground(j2dpanel.getDateTimeColor() );
        dateTimeXOffsetTextField.setText(""+j2dpanel.getXDateTimeOffset());
        dateTimeYOffsetTextField.setText(""+j2dpanel.getYDateTimeOffset());
        
        // darkness options
        showDarknessCheckBox.setSelected(j2dpanel.isDrawSun());
        int val = (int) (100.0*j2dpanel.getSunAlpha());
        alphaSlider.setValue(val);
        sunColorPanel.setBackground( j2dpanel.getSunColor() );
        sunResTextArea.setText( ""+j2dpanel.getNumPtsSunFootPrint() );
        
        // Region options
        
        
        // load data files into chooser
        File dir = new File( j2dpanel.getPathRegionFiles() );
        File[] dirList = dir.listFiles();
        
        if (dirList == null)
        {
            // Either dir does not exist or is not a directory
        }
        else
        {
            for (int i=0; i<dirList.length; i++)
            {
                // add filename to the chooser
                regionsComboBox.addItem(dirList[i].getName());
            }
        }
        // select the current one if possible
        regionsComboBox.setSelectedItem( j2dpanel.getRegionFileName() );
        drawRegionsCheckBox.setSelected( j2dpanel.isRegionDrawOn() );        
        regionsColorPanel.setBackground( j2dpanel.getRegionLineColor() );
        
        // darkness effect
        darknessEffectCheckBox.setSelected( j2dpanel.isShowEarthLightsMask());
        
    } // TwoDViewPropertiesPanel
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        bgColorPanel = new javax.swing.JPanel();
        bgColorButton = new javax.swing.JButton();
        latLongLinesCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        zoomIncrementTextField = new javax.swing.JTextField();
        fastImageScalingRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        smoothScalingRadioButton = new javax.swing.JRadioButton();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        showDatTimeCheckBox = new javax.swing.JCheckBox();
        dateTimeColorPanel = new javax.swing.JPanel();
        datTimeColorButton = new javax.swing.JButton();
        dateTimeXOffsetTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateTimeYOffsetTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        drawRegionsCheckBox = new javax.swing.JCheckBox();
        regionsColorPanel = new javax.swing.JPanel();
        regionsColorButton = new javax.swing.JButton();
        regionsComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        showDarknessCheckBox = new javax.swing.JCheckBox();
        sunColorPanel = new javax.swing.JPanel();
        sunColorButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        sunResTextArea = new javax.swing.JTextField();
        alphaSlider = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        alphaValTextArea = new javax.swing.JLabel();
        darknessEffectCheckBox = new javax.swing.JCheckBox();
        imageBrowseButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        imagePathTextField = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        bgColorPanel.setBackground(new java.awt.Color(0, 0, 0));
        bgColorPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout bgColorPanelLayout = new javax.swing.GroupLayout(bgColorPanel);
        bgColorPanel.setLayout(bgColorPanelLayout);
        bgColorPanelLayout.setHorizontalGroup(
            bgColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );
        bgColorPanelLayout.setVerticalGroup(
            bgColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        bgColorButton.setText("Background Color");
        bgColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgColorButtonActionPerformed(evt);
            }
        });

        latLongLinesCheckBox.setText("Show Lat/Long Lines");
        latLongLinesCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        latLongLinesCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel1.setText("Zoom Increment Factor:");

        zoomIncrementTextField.setText("2.0 ");

        fastImageScalingRadioButton.setText("Fast");
        fastImageScalingRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        fastImageScalingRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        fastImageScalingRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastImageScalingRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Image Scaling:");

        smoothScalingRadioButton.setText("Smooth");
        smoothScalingRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        smoothScalingRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        smoothScalingRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smoothScalingRadioButtonActionPerformed(evt);
            }
        });

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        showDatTimeCheckBox.setText("Show Date/Time");
        showDatTimeCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        showDatTimeCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        dateTimeColorPanel.setBackground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout dateTimeColorPanelLayout = new javax.swing.GroupLayout(dateTimeColorPanel);
        dateTimeColorPanel.setLayout(dateTimeColorPanelLayout);
        dateTimeColorPanelLayout.setHorizontalGroup(
            dateTimeColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );
        dateTimeColorPanelLayout.setVerticalGroup(
            dateTimeColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        datTimeColorButton.setText("Text Color");
        datTimeColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datTimeColorButtonActionPerformed(evt);
            }
        });

        dateTimeXOffsetTextField.setText("10");

        jLabel4.setText("x Offset:");

        jLabel5.setText("y Offset:");

        dateTimeYOffsetTextField.setText("3");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showDatTimeCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTimeColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datTimeColorButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTimeXOffsetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTimeYOffsetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datTimeColorButton)
                    .addComponent(dateTimeColorPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showDatTimeCheckBox, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateTimeXOffsetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(dateTimeYOffsetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Region Drawing"));

        drawRegionsCheckBox.setText("Draw Regions");
        drawRegionsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        drawRegionsCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        regionsColorPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout regionsColorPanelLayout = new javax.swing.GroupLayout(regionsColorPanel);
        regionsColorPanel.setLayout(regionsColorPanelLayout);
        regionsColorPanelLayout.setHorizontalGroup(
            regionsColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );
        regionsColorPanelLayout.setVerticalGroup(
            regionsColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        regionsColorButton.setText("Outline Color");
        regionsColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regionsColorButtonActionPerformed(evt);
            }
        });

        regionsComboBox.setToolTipText("data sets located in data/regions/");

        jLabel8.setText("Data Set:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(drawRegionsCheckBox)
                        .addGap(14, 14, 14)
                        .addComponent(regionsColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regionsColorButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(regionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawRegionsCheckBox)
                    .addComponent(regionsColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionsColorButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Darkness"));

        showDarknessCheckBox.setText("Show Darkness Outline/Fill");
        showDarknessCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        showDarknessCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        sunColorPanel.setBackground(new java.awt.Color(0, 0, 0));
        sunColorPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout sunColorPanelLayout = new javax.swing.GroupLayout(sunColorPanel);
        sunColorPanel.setLayout(sunColorPanelLayout);
        sunColorPanelLayout.setHorizontalGroup(
            sunColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );
        sunColorPanelLayout.setVerticalGroup(
            sunColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        sunColorButton.setText("Color");
        sunColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunColorButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Resolution:");

        sunResTextArea.setText("101");

        alphaSlider.setToolTipText("Transparency of Darkness");
        alphaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                alphaSliderStateChanged(evt);
            }
        });

        jLabel7.setText("Fill Alpha:");
        jLabel7.setToolTipText("Transparency of Darkness");

        alphaValTextArea.setText("0.50");

        darknessEffectCheckBox.setText("Earth Lights Darkness Effect");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(sunColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sunColorButton)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6)
                                .addGap(12, 12, 12)
                                .addComponent(sunResTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(showDarknessCheckBox)
                            .addComponent(darknessEffectCheckBox)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alphaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(alphaValTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(showDarknessCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sunColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sunColorButton)
                        .addComponent(jLabel6)
                        .addComponent(sunResTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(alphaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alphaValTextArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(darknessEffectCheckBox))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        imageBrowseButton.setText("Browse");
        imageBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageBrowseButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Image: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(bgColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(bgColorButton))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(zoomIncrementTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel2)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(fastImageScalingRadioButton)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(smoothScalingRadioButton))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, 0)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(latLongLinesCheckBox)))
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(imageBrowseButton)
                                    .addComponent(imagePathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(applyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addGap(79, 79, 79)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bgColorPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bgColorButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(latLongLinesCheckBox)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(zoomIncrementTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fastImageScalingRadioButton)
                    .addComponent(jLabel2)
                    .addComponent(smoothScalingRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(imagePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageBrowseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyButton)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void regionsColorButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_regionsColorButtonActionPerformed
    {//GEN-HEADEREND:event_regionsColorButtonActionPerformed
        // popup color chooser starting with current color
        // if user hit okay, change color of  jpanel: colorPanel
        Color oldColor = regionsColorPanel.getBackground();
        // show color Dialog
        Color newColor = JColorChooser.showDialog(app,"Choose Region Outline Color", oldColor);
        
        if (newColor != null)
        {
            regionsColorPanel.setBackground(newColor);
        }
    }//GEN-LAST:event_regionsColorButtonActionPerformed

    private void alphaSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_alphaSliderStateChanged
    {//GEN-HEADEREND:event_alphaSliderStateChanged
        // slider changed
        int val = alphaSlider.getValue();
        if(val == 100)
        {
            alphaValTextArea.setText("1.00");
        }
        else
        {
            if(val < 10)
            {
                alphaValTextArea.setText("0.0"+val);
            }
            else
            {
                alphaValTextArea.setText("0."+val);
            }
        }
        
    }//GEN-LAST:event_alphaSliderStateChanged

    private void sunColorButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sunColorButtonActionPerformed
    {//GEN-HEADEREND:event_sunColorButtonActionPerformed
        // popup color chooser starting with current color
        // if user hit okay, change color of  jpanel: colorPanel
        Color oldColor = sunColorPanel.getBackground();
        // show color Dialog
        Color newColor = JColorChooser.showDialog(app,"Choose Darkness Color", oldColor);
        
        if (newColor != null)
        {
            sunColorPanel.setBackground(newColor);
        }
    }//GEN-LAST:event_sunColorButtonActionPerformed

    private void datTimeColorButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_datTimeColorButtonActionPerformed
    {//GEN-HEADEREND:event_datTimeColorButtonActionPerformed
        // popup color chooser starting with current color
        // if user hit okay, change color of  jpanel: colorPanel
        Color oldColor = dateTimeColorPanel.getBackground();
        // show color Dialog
        Color newColor = JColorChooser.showDialog(app,"Choose Satellite Color", oldColor);
        
        if (newColor != null)
        {
            dateTimeColorPanel.setBackground(newColor);
        }
    }//GEN-LAST:event_datTimeColorButtonActionPerformed

    private void bgColorButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bgColorButtonActionPerformed
    {//GEN-HEADEREND:event_bgColorButtonActionPerformed
        // popup color chooser starting with current color
        // if user hit okay, change color of  jpanel: colorPanel
        Color oldColor = bgColorPanel.getBackground();
        // show color Dialog
        Color newColor = JColorChooser.showDialog(app,"Choose Satellite Color", oldColor);
        
        if (newColor != null)
        {
            bgColorPanel.setBackground(newColor);
        }
    }//GEN-LAST:event_bgColorButtonActionPerformed

    private void smoothScalingRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_smoothScalingRadioButtonActionPerformed
    {//GEN-HEADEREND:event_smoothScalingRadioButtonActionPerformed
        fastImageScalingRadioButton.setSelected(false);
        smoothScalingRadioButton.setSelected(true);
    }//GEN-LAST:event_smoothScalingRadioButtonActionPerformed

    private void fastImageScalingRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fastImageScalingRadioButtonActionPerformed
    {//GEN-HEADEREND:event_fastImageScalingRadioButtonActionPerformed
        smoothScalingRadioButton.setSelected(false);
        fastImageScalingRadioButton.setSelected(true);
    }//GEN-LAST:event_fastImageScalingRadioButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // close internal frame
        try
        {
            iframe.dispose(); // could setClosed(true)
        }
        catch(Exception e){}
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        // save all settings back to satProp
         boolean updateMaps = saveSettings();
        
        
        // force repaint
        app.forceRepainting(updateMaps);
        
        // close internal frame
        try
        {
            iframe.dispose(); // could setClosed(true)
        }
        catch(Exception e){}
    }//GEN-LAST:event_okButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_applyButtonActionPerformed
    {//GEN-HEADEREND:event_applyButtonActionPerformed
        // save settings
        boolean updateMaps = saveSettings();
        
        // force repaint
        app.forceRepainting(updateMaps);
        
    }//GEN-LAST:event_applyButtonActionPerformed

private void imageBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageBrowseButtonActionPerformed
        // Browse for models in local dir
    //String localPathCononical = "data/models/";
    String localPath = "data"+File.separator+ "pixmaps" + File.separator;
    String userDir = System.getProperty("user.dir"); // path java was run from
    
    final JFileChooser fc = new JFileChooser(localPath);
//    ImageFilter xmlFilter = new ImageFilter("jpg,gif,png", "*.jpg,*.gif,*.png");
//    ImageFilter xmlFilter = new ImageFilter("jpg,gif,png", "*.jpg,*.gif,*.png");
//    ImageFilter xmlFilter = new ImageFilter("jpg,gif,png", "*.jpg,*.gif,*.png");
//    ImageFilter xmlFilter = new ImageFilter("jpg,gif,png", "*.jpg,*.gif,*.png");
//    
//    //ImageFilter xmlFilter2 = new ImageFilter("obj", "*.obj");
//    
//    //fc.addChoosableFileFilter(xmlFilter2);
//    fc.addChoosableFileFilter(xmlFilter); // load last so 3ds is prefered

    int returnVal = fc.showOpenDialog(this);

    if(returnVal == JFileChooser.APPROVE_OPTION)
    {
        try
        {
            File file = fc.getSelectedFile();
            String test = userDir;// + File.separator + localPath;
            String test2 = file.getAbsolutePath();
            String relPath = RelativePath.getRelativePath(new File(test), new File(test2)); // returns conanical rel path

            imagePathTextField.setText(relPath);
     
        }
        catch(Exception e)
        {
            System.out.println("ERROR Selecting Model File: " + e.toString());
        }
    } // if file choosen
    
}//GEN-LAST:event_imageBrowseButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider alphaSlider;
    private javax.swing.JLabel alphaValTextArea;
    private javax.swing.JButton applyButton;
    private javax.swing.JButton bgColorButton;
    private javax.swing.JPanel bgColorPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox darknessEffectCheckBox;
    private javax.swing.JButton datTimeColorButton;
    private javax.swing.JPanel dateTimeColorPanel;
    private javax.swing.JTextField dateTimeXOffsetTextField;
    private javax.swing.JTextField dateTimeYOffsetTextField;
    private javax.swing.JCheckBox drawRegionsCheckBox;
    private javax.swing.JRadioButton fastImageScalingRadioButton;
    private javax.swing.JButton imageBrowseButton;
    private javax.swing.JTextField imagePathTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox latLongLinesCheckBox;
    private javax.swing.JButton okButton;
    private javax.swing.JButton regionsColorButton;
    private javax.swing.JPanel regionsColorPanel;
    private javax.swing.JComboBox regionsComboBox;
    private javax.swing.JCheckBox showDarknessCheckBox;
    private javax.swing.JCheckBox showDatTimeCheckBox;
    private javax.swing.JRadioButton smoothScalingRadioButton;
    private javax.swing.JButton sunColorButton;
    private javax.swing.JPanel sunColorPanel;
    private javax.swing.JTextField sunResTextArea;
    private javax.swing.JTextField zoomIncrementTextField;
    // End of variables declaration//GEN-END:variables
 
    
    public boolean saveSettings()
    {
        boolean updateMapData = false;
        
        // save settings
        // setup options window with currently selected options
        j2dpanel.setBackgroundColor( bgColorPanel.getBackground() );
        j2dpanel.setShowLatLonLines( latLongLinesCheckBox.isSelected()  );
        
//        if(blueMarbleImageRadioButton.isSelected() )
//        {
//            j2dpanel.setImageMapNum(0);
//        }
//        else
//        {
//            j2dpanel.setImageMapNum(1);
//        }
        // Image path
        j2dpanel.setTwoDMap(imagePathTextField.getText());
        
        try
        {
            j2dpanel.setZoomIncrementMultiplier( Double.parseDouble( zoomIncrementTextField.getText() ) );
        }catch(Exception e){}
        
        
        if(fastImageScalingRadioButton.isSelected())
        {
            j2dpanel.setImageScalingOption(BufferedImage.SCALE_FAST);
        }
        else
        {
            j2dpanel.setImageScalingOption(BufferedImage.SCALE_SMOOTH);
        }
        
        j2dpanel.setShowDateTime(showDatTimeCheckBox.isSelected());
        j2dpanel.setDateTimeColor(dateTimeColorPanel.getBackground() );
        try
        {
        j2dpanel.setXDateTimeOffset( Integer.parseInt(dateTimeXOffsetTextField.getText()) );
        j2dpanel.setYDateTimeOffset( Integer.parseInt(dateTimeYOffsetTextField.getText()) );
        }
        catch(Exception e){}
        
        // darkness settings
        j2dpanel.setDrawSun(showDarknessCheckBox.isSelected());
        j2dpanel.setSunColor(sunColorPanel.getBackground());
        try
        {
            j2dpanel.setSunAlpha( Float.parseFloat(alphaValTextArea.getText()) );
        }
        catch(Exception e){}
        try
        {
            j2dpanel.setNumPtsSunFootPrint( Integer.parseInt(sunResTextArea.getText()) );
        }
        catch(Exception e){}
        
        // darkness image/light effect
        j2dpanel.setShowEarthLightsMask(darknessEffectCheckBox.isSelected() );
        
        // region settings
        j2dpanel.setRegionDrawingOptions(drawRegionsCheckBox.isSelected(), (String)regionsComboBox.getSelectedItem(), regionsColorPanel.getBackground());
               
        
        return updateMapData;
    } // saveSettings
    
    
}
